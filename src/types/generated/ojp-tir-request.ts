/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/ojp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Main /ojp endpoint
         * @description Main /ojp endpoint
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/xml": {
                            OJPRequest: {
                                serviceRequest: {
                                    serviceRequestContext?: {
                                        language?: string;
                                    };
                                    requestTimestamp: string;
                                    requestorRef: string;
                                    OJPTripInfoRequest: {
                                        requestTimestamp: string;
                                        journeyRef: string;
                                        operatingDayRef: string;
                                        params?: {
                                            includeCalls?: boolean;
                                            includeService?: boolean;
                                            includeTrackProjection?: boolean;
                                            includePlacesContext?: boolean;
                                            includeSituationsContext?: boolean;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        TripInfoParamStructure: {
            includeCalls?: boolean;
            includeService?: boolean;
            includeTrackProjection?: boolean;
            includePlacesContext?: boolean;
            includeSituationsContext?: boolean;
        };
        OJPTripInfoRequest: {
            requestTimestamp: string;
            journeyRef: string;
            operatingDayRef: string;
            params?: {
                includeCalls?: boolean;
                includeService?: boolean;
                includeTrackProjection?: boolean;
                includePlacesContext?: boolean;
                includeSituationsContext?: boolean;
            };
        };
        OJP: {
            OJPRequest: {
                serviceRequest: {
                    serviceRequestContext?: {
                        language?: string;
                    };
                    requestTimestamp: string;
                    requestorRef: string;
                    OJPTripInfoRequest: {
                        requestTimestamp: string;
                        journeyRef: string;
                        operatingDayRef: string;
                        params?: {
                            includeCalls?: boolean;
                            includeService?: boolean;
                            includeTrackProjection?: boolean;
                            includePlacesContext?: boolean;
                            includeSituationsContext?: boolean;
                        };
                    };
                };
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
