/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/ojp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Main /ojp endpoint
         * @description Main /ojp endpoint
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/xml": {
                            OJPRequest: {
                                serviceRequest: {
                                    serviceRequestContext?: {
                                        language?: string;
                                    };
                                    requestTimestamp: string;
                                    requestorRef: string;
                                    OJPLocationInformationRequest: {
                                        requestTimestamp: string;
                                        initialInput?: {
                                            name?: string;
                                            geoRestriction?: {
                                                rectangle: {
                                                    upperLeft: {
                                                        longitude: number;
                                                        latitude: number;
                                                    };
                                                    lowerRight: {
                                                        longitude: number;
                                                        latitude: number;
                                                    };
                                                };
                                            };
                                        };
                                        placeRef?: {
                                            stopPointRef?: string;
                                            stopPlaceRef?: string;
                                            geoPosition?: {
                                                longitude: number;
                                                latitude: number;
                                            };
                                            name: {
                                                text: string;
                                            };
                                        };
                                        restrictions?: {
                                            type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
                                            numberOfResults?: number;
                                            modes?: {
                                                exclude?: boolean;
                                                ptMode?: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "telecabin" | "other" | "unknown")[];
                                            };
                                            includePtModes?: boolean;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        PlaceParam: {
            type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
            numberOfResults?: number;
            modes?: {
                exclude?: boolean;
                ptMode?: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "telecabin" | "other" | "unknown")[];
            };
            includePtModes?: boolean;
        };
        InitialInput: {
            name?: string;
            geoRestriction?: {
                rectangle: {
                    upperLeft: {
                        longitude: number;
                        latitude: number;
                    };
                    lowerRight: {
                        longitude: number;
                        latitude: number;
                    };
                };
            };
        };
        OJPLocationInformationRequest: {
            requestTimestamp: string;
            initialInput?: {
                name?: string;
                geoRestriction?: {
                    rectangle: {
                        upperLeft: {
                            longitude: number;
                            latitude: number;
                        };
                        lowerRight: {
                            longitude: number;
                            latitude: number;
                        };
                    };
                };
            };
            placeRef?: {
                stopPointRef?: string;
                stopPlaceRef?: string;
                geoPosition?: {
                    longitude: number;
                    latitude: number;
                };
                name: {
                    text: string;
                };
            };
            restrictions?: {
                type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
                numberOfResults?: number;
                modes?: {
                    exclude?: boolean;
                    ptMode?: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "telecabin" | "other" | "unknown")[];
                };
                includePtModes?: boolean;
            };
        };
        OJP: {
            OJPRequest: {
                serviceRequest: {
                    serviceRequestContext?: {
                        language?: string;
                    };
                    requestTimestamp: string;
                    requestorRef: string;
                    OJPLocationInformationRequest: {
                        requestTimestamp: string;
                        initialInput?: {
                            name?: string;
                            geoRestriction?: {
                                rectangle: {
                                    upperLeft: {
                                        longitude: number;
                                        latitude: number;
                                    };
                                    lowerRight: {
                                        longitude: number;
                                        latitude: number;
                                    };
                                };
                            };
                        };
                        placeRef?: {
                            stopPointRef?: string;
                            stopPlaceRef?: string;
                            geoPosition?: {
                                longitude: number;
                                latitude: number;
                            };
                            name: {
                                text: string;
                            };
                        };
                        restrictions?: {
                            type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
                            numberOfResults?: number;
                            modes?: {
                                exclude?: boolean;
                                ptMode?: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "telecabin" | "other" | "unknown")[];
                            };
                            includePtModes?: boolean;
                        };
                    };
                };
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
